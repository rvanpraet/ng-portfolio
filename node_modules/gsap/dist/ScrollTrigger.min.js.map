{"version":3,"file":"ScrollTrigger.min.js","sources":["../src/ScrollTrigger.js"],"sourcesContent":["/*!\n * ScrollTrigger 3.6.0\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _win, _doc, _docEl, _body, _root, _resizeDelay, _raf, _request, _toArray, _clamp, _time2, _syncInterval, _refreshing, _pointerIsDown, _transformProp, _i, _prevWidth, _prevHeight, _autoRefresh, _sort,\n\t_limitCallbacks, // if true, we'll only trigger callbacks if the active state toggles, so if you scroll immediately past both the start and end positions of a ScrollTrigger (thus inactive to inactive), neither its onEnter nor onLeave will be called. This is useful during startup.\n\t_startup = 1,\n\t_proxies = [],\n\t_scrollers = [],\n\t_getTime = Date.now,\n\t_time1 = _getTime(),\n\t_lastScrollTime = 0,\n\t_enabled = 1,\n\t_passThrough = v => v,\n\t_windowExists = () => typeof(window) !== \"undefined\",\n\t_getGSAP = () => gsap || (_windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_isViewport = e => !!~_root.indexOf(e),\n\t_getProxyProp = (element, property) => ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property],\n\t_getScrollFunc = (element, {s, sc}) => {\n\t\tlet i = _scrollers.indexOf(element),\n\t\t\toffset = sc === _vertical.sc ? 1 : 2;\n\t\t!~i && (i = _scrollers.push(element) - 1);\n\t\treturn _scrollers[i + offset] || (_scrollers[i + offset] = _getProxyProp(element, s) || (_isViewport(element) ? sc : function(value) { return arguments.length ? (element[s] = value) : element[s]; }));\n\t},\n\t_getBoundsFunc = element => _getProxyProp(element, \"getBoundingClientRect\") || (_isViewport(element) ? () => {_winOffsets.width = _win.innerWidth; _winOffsets.height = _win.innerHeight; return _winOffsets;} : () => _getBounds(element)),\n\t_getSizeFunc = (scroller, isViewport, {d, d2, a}) => (a = _getProxyProp(scroller, \"getBoundingClientRect\")) ? () => a()[d] : () => (isViewport ? _win[\"inner\" + d2] : scroller[\"client\" + d2]) || 0,\n\t_getOffsetsFunc = (element, isViewport) => !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : () => _winOffsets,\n\t_maxScroll = (element, {s, d2, d, a}) => (s = \"scroll\" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport(element) ? Math.max(_docEl[s], _body[s]) - (_win[\"inner\" + d2] || _docEl[\"client\" + d2] || _body[\"client\" + d2]) : element[s] - element[\"offset\" + d2],\n\t_iterateAutoRefresh = (func, events) => {\n\t\tfor (let i = 0; i < _autoRefresh.length; i += 3) {\n\t\t\t(!events || ~events.indexOf(_autoRefresh[i+1])) && func(_autoRefresh[i], _autoRefresh[i+1], _autoRefresh[i+2]);\n\t\t}\n\t},\n\t_isString = value => typeof(value) === \"string\",\n\t_isFunction = value => typeof(value) === \"function\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isObject = value => typeof(value) === \"object\",\n\t_callIfFunc = value => _isFunction(value) && value(),\n\t_combineFunc = (f1, f2) => () => {\n\t\tlet result1 = _callIfFunc(f1),\n\t\t\tresult2 = _callIfFunc(f2);\n\t\treturn () => {\n\t\t\t_callIfFunc(result1);\n\t\t\t_callIfFunc(result2);\n\t\t}\n\t},\n\t_abs = Math.abs,\n\t_scrollLeft = \"scrollLeft\",\n\t_scrollTop = \"scrollTop\",\n\t_left = \"left\",\n\t_top = \"top\",\n\t_right = \"right\",\n\t_bottom = \"bottom\",\n\t_width = \"width\",\n\t_height = \"height\",\n\t_Right = \"Right\",\n\t_Left = \"Left\",\n\t_Top = \"Top\",\n\t_Bottom = \"Bottom\",\n\t_padding = \"padding\",\n\t_margin = \"margin\",\n\t_Width = \"Width\",\n\t_Height = \"Height\",\n\t_px = \"px\",\n\t_horizontal = {s: _scrollLeft, p: _left, p2: _Left, os: _right, os2: _Right, d: _width, d2: _Width, a: \"x\", sc: function(value) { return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0}},\n\t_vertical = {s: _scrollTop, p: _top, p2: _Top, os: _bottom, os2: _Bottom, d: _height, d2: _Height, a: \"y\", op: _horizontal, sc: function(value) { return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0}},\n\t_getComputedStyle = element => _win.getComputedStyle(element),\n\t_makePositionable = element => element.style.position = (_getComputedStyle(element).position === \"absolute\") ? \"absolute\" : \"relative\", // if the element already has position: absolute, leave that, otherwise make it position: relative\n\t_setDefaults = (obj, defaults) => {\n\t\tfor (let p in defaults) {\n\t\t\t(p in obj) || (obj[p] = defaults[p]);\n\t\t}\n\t\treturn obj;\n\t},\n\t//_isInViewport = element => (element = _getBounds(element)) && !(element.top > (_win.innerHeight || _docEl.clientHeight) || element.bottom < 0 || element.left > (_win.innerWidth || _docEl.clientWidth) || element.right < 0) && element,\n\t_getBounds = (element, withoutTransforms) => {\n\t\tlet tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== \"matrix(1, 0, 0, 1, 0, 0)\" && gsap.to(element, {x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0}).progress(1),\n\t\t\tbounds = element.getBoundingClientRect();\n\t\ttween && tween.progress(0).kill();\n\t\treturn bounds;\n\t},\n\t_getSize = (element, {d2}) => element[\"offset\" + d2] || element[\"client\" + d2] || 0,\n\t_getLabels = animation => {\n\t\treturn value => {\n\t\t\tlet a = [],\n\t\t\t\tlabels = animation.labels,\n\t\t\t\tduration = animation.duration(),\n\t\t\t\tp;\n\t\t\tfor (p in labels) {\n\t\t\t\ta.push(labels[p] / duration);\n\t\t\t}\n\t\t\treturn gsap.utils.snap(a, value);\n\t\t};\n\t},\n\t_multiListener = (func, element, types, callback) => types.split(\",\").forEach(type => func(element, type, callback)),\n\t_addListener = (element, type, func) => element.addEventListener(type, func, {passive: true}),\n\t_removeListener = (element, type, func) => element.removeEventListener(type, func),\n\t_markerDefaults = {startColor: \"green\", endColor: \"red\", indent: 0, fontSize: \"16px\", fontWeight:\"normal\"},\n\t_defaults = {toggleActions: \"play\", anticipatePin: 0},\n\t_keywords = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1},\n\t_offsetToPx = (value, size) => {\n\t\tif (_isString(value)) {\n\t\t\tlet eqIndex = value.indexOf(\"=\"),\n\t\t\t\trelative = ~eqIndex ? +(value.charAt(eqIndex-1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;\n\t\t\tif (relative) {\n\t\t\t\t(value.indexOf(\"%\") > eqIndex) && (relative *= size / 100);\n\t\t\t\tvalue = value.substr(0, eqIndex-1);\n\t\t\t}\n\t\t\tvalue = relative + ((value in _keywords) ? _keywords[value] * size : ~value.indexOf(\"%\") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);\n\t\t}\n\t\treturn value;\n\t},\n\t_createMarker = (type, name, container, direction, {startColor, endColor, fontSize, indent, fontWeight}, offset, matchWidthEl) => {\n\t\tlet e = _doc.createElement(\"div\"),\n\t\t\tuseFixedPosition = _isViewport(container) || _getProxyProp(container, \"pinType\") === \"fixed\",\n\t\t\tisScroller = type.indexOf(\"scroller\") !== -1,\n\t\t\tparent = useFixedPosition ? _body : container,\n\t\t\tisStart = type.indexOf(\"start\") !== -1,\n\t\t\tcolor = isStart ? startColor : endColor,\n\t\t\tcss = \"border-color:\" + color + \";font-size:\" + fontSize + \";color:\" + color + \";font-weight:\" + fontWeight + \";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;\";\n\t\tcss += \"position:\" + (isScroller && useFixedPosition ? \"fixed;\" : \"absolute;\");\n\t\t(isScroller || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + \":\" + (offset + parseFloat(indent)) + \"px;\");\n\t\tmatchWidthEl && (css += \"box-sizing:border-box;text-align:left;width:\" + matchWidthEl.offsetWidth + \"px;\");\n\t\te._isStart = isStart;\n\t\te.setAttribute(\"class\", \"gsap-marker-\" + type);\n\t\te.style.cssText = css;\n\t\te.innerText = name || name === 0 ? type + \"-\" + name : type;\n\t\tparent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);\n\t\te._offset = e[\"offset\" + direction.op.d2];\n\t\t_positionMarker(e, 0, direction, isStart);\n\t\treturn e;\n\t},\n\t_positionMarker = (marker, start, direction, flipped) => {\n\t\tlet vars = {display: \"block\"},\n\t\t\tside = direction[flipped ? \"os2\" : \"p2\"],\n\t\t\toppositeSide = direction[flipped ? \"p2\" : \"os2\"];\n\t\tmarker._isFlipped = flipped;\n\t\tvars[direction.a + \"Percent\"] = flipped ? -100 : 0;\n\t\tvars[direction.a] = flipped ? \"1px\" : 0;\n\t\tvars[\"border\" + side + _Width] = 1;\n\t\tvars[\"border\" + oppositeSide + _Width] = 0;\n\t\tvars[direction.p] = start + \"px\";\n\t\tgsap.set(marker, vars);\n\t},\n\t_triggers = [],\n\t_ids = {},\n\t_sync = () => _request || (_request = _raf(_updateAll)),\n\t_onScroll = () => {\n\t\tif (!_request) {\n\t\t\t_request = _raf(_updateAll);\n\t\t\t_lastScrollTime || _dispatch(\"scrollStart\");\n\t\t\t_lastScrollTime = _getTime();\n\t\t}\n\t},\n\t_onResize = () => !_refreshing && _resizeDelay.restart(true), // ignore resizes triggered by refresh()\n\t_listeners = {},\n\t_emptyArray = [],\n\t_media = [],\n\t_creatingMedia, // when ScrollTrigger.matchMedia() is called, we record the current media key here (like \"(min-width: 800px)\") so that we can assign it to everything that's created during that call. Then we can revert just those when necessary. In the ScrollTrigger's init() call, the _creatingMedia is recorded as a \"media\" property on the instance.\n\t_lastMediaTick,\n\t_onMediaChange = e => {\n\t\tlet tick = gsap.ticker.frame,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tindex;\n\t\tif (_lastMediaTick !== tick || _startup) {\n\t\t\t_revertAll();\n\t\t\tfor (; i < _media.length; i+=4) {\n\t\t\t\tindex = _win.matchMedia(_media[i]).matches;\n\t\t\t\tif (index !== _media[i+3]) { // note: some browsers fire the matchMedia event multiple times, like when going full screen, so we shouldn't call the function multiple times. Check to see if it's already matched.\n\t\t\t\t\t_media[i+3] = index;\n\t\t\t\t\tindex ? matches.push(i) : _revertAll(1, _media[i]) || (_isFunction(_media[i+2]) && _media[i+2]()); // Firefox doesn't update the \"matches\" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.\n\t\t\t\t}\n\t\t\t}\n\t\t\t_revertRecorded(); // in case killing/reverting any of the animations actually added inline styles back.\n\t\t\tfor (i = 0; i < matches.length; i++) {\n\t\t\t\tindex = matches[i];\n\t\t\t\t_creatingMedia = _media[index];\n\t\t\t\t_media[index+2] = _media[index+1](e);\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t\t_coreInitted && _refreshAll(0, 1);\n\t\t\t_lastMediaTick = tick;\n\t\t\t_dispatch(\"matchMedia\");\n\t\t}\n\t},\n\t_softRefresh = () => _removeListener(ScrollTrigger, \"scrollEnd\", _softRefresh) || _refreshAll(true),\n\t_dispatch = type => (_listeners[type] && _listeners[type].map(f => f())) || _emptyArray,\n\t_savedStyles = [], // when ScrollTrigger.saveStyles() is called, the inline styles are recorded in this Array in a sequential format like [element, cssText, gsCache, media]. This keeps it very memory-efficient and fast to iterate through.\n\t_revertRecorded = media => {\n\t\tfor (let i = 0; i < _savedStyles.length; i+=4) {\n\t\t\tif (!media || _savedStyles[i+3] === media) {\n\t\t\t\t_savedStyles[i].style.cssText = _savedStyles[i+1];\n\t\t\t\t_savedStyles[i+2].uncache = 1;\n\t\t\t}\n\t\t}\n\t},\n\t_revertAll = (kill, media) => {\n\t\tlet trigger;\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\ttrigger = _triggers[_i];\n\t\t\tif (!media || trigger.media === media) {\n\t\t\t\tif (kill) {\n\t\t\t\t\ttrigger.kill(1);\n\t\t\t\t} else {\n\t\t\t\t\ttrigger.scroll.rec || (trigger.scroll.rec = trigger.scroll()); // record the scroll positions so that in each refresh() we can ensure that it doesn't shift. Remember, pinning can make things change around, especially if the same element is pinned multiple times. If one was already recorded, don't re-record because unpinning may have occurred and made it shorter.\n\t\t\t\t\ttrigger.revert();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_revertRecorded(media);\n\t\tmedia || _dispatch(\"revert\");\n\t},\n\t_refreshAll = (force, skipRevert) => {\n\t\tif (_lastScrollTime && !force) {\n\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\treturn;\n\t\t}\n\t\tlet refreshInits = _dispatch(\"refreshInit\");\n\t\t_sort && ScrollTrigger.sort();\n\t\tskipRevert || _revertAll();\n\t\tfor (_i = 0; _i < _triggers.length; _i++) {\n\t\t\t_triggers[_i].refresh();\n\t\t}\n\t\trefreshInits.forEach(result => result && result.render && result.render(-1)); // if the onRefreshInit() returns an animation (typically a gsap.set()), revert it. This makes it easy to put things in a certain spot before refreshing for measurement purposes, and then put things back.\n\t\t_i = _triggers.length;\n\t\twhile (_i--) {\n\t\t\t_triggers[_i].scroll.rec = 0;\n\t\t}\n\t\t_resizeDelay.pause();\n\t\t_dispatch(\"refresh\");\n\t},\n\t_lastScroll = 0,\n\t_direction = 1,\n\t_updateAll = () => {\n\t\tlet l = _triggers.length,\n\t\t\ttime = _getTime(),\n\t\t\trecordVelocity = time - _time1 >= 50,\n\t\t\tscroll = l && _triggers[0].scroll();\n\t\t_direction = _lastScroll > scroll ? -1 : 1;\n\t\t_lastScroll = scroll;\n\t\tif (recordVelocity) {\n\t\t\tif (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {\n\t\t\t\t_lastScrollTime = 0;\n\t\t\t\t_dispatch(\"scrollEnd\");\n\t\t\t}\n\t\t\t_time2 = _time1;\n\t\t\t_time1 = time;\n\t\t}\n\t\tif (_direction < 0) {\n\t\t\t_i = l;\n\t\t\twhile (_i--) {\n\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t}\n\t\t\t_direction = 1;\n\t\t} else {\n\t\t\tfor (_i = 0; _i < l; _i++) {\n\t\t\t\t_triggers[_i] && _triggers[_i].update(0, recordVelocity);\n\t\t\t}\n\t\t}\n\t\t_request = 0;\n\t},\n\t_propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, \"display\", \"flexShrink\", \"float\"],\n\t_stateProps = _propNamesToCopy.concat([_width, _height, \"boxSizing\", \"max\" + _Width, \"max\" + _Height, \"position\", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),\n\t_swapPinOut = (pin, spacer, state) => {\n\t\t_setState(state);\n\t\tif (pin.parentNode === spacer) {\n\t\t\tlet parent = spacer.parentNode;\n\t\t\tif (parent) {\n\t\t\t\tparent.insertBefore(pin, spacer);\n\t\t\t\tparent.removeChild(spacer);\n\t\t\t}\n\t\t}\n\t},\n\t_swapPinIn = (pin, spacer, cs, spacerState) => {\n\t\tif (pin.parentNode !== spacer) {\n\t\t\tlet i = _propNamesToCopy.length,\n\t\t\t\tspacerStyle = spacer.style,\n\t\t\t\tpinStyle = pin.style,\n\t\t\t\tp;\n\t\t\twhile (i--) {\n\t\t\t\tp = _propNamesToCopy[i];\n\t\t\t\tspacerStyle[p] = cs[p];\n\t\t\t}\n\t\t\tspacerStyle.position = cs.position === \"absolute\" ? \"absolute\" : \"relative\";\n\t\t\t(cs.display === \"inline\") && (spacerStyle.display = \"inline-block\");\n\t\t\tpinStyle[_bottom] = pinStyle[_right] = \"auto\";\n\t\t\tspacerStyle.overflow = \"visible\";\n\t\t\tspacerStyle.boxSizing = \"border-box\";\n\t\t\tspacerStyle[_width] = _getSize(pin, _horizontal) + _px;\n\t\t\tspacerStyle[_height] = _getSize(pin, _vertical) + _px;\n\t\t\tspacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = \"0\";\n\t\t\t_setState(spacerState);\n\t\t\tpinStyle[_width] = pinStyle[\"max\" + _Width] = cs[_width];\n\t\t\tpinStyle[_height] = pinStyle[\"max\" + _Height] = cs[_height];\n\t\t\tpinStyle[_padding] = cs[_padding];\n\t\t\tpin.parentNode.insertBefore(spacer, pin);\n\t\t\tspacer.appendChild(pin);\n\t\t}\n\t},\n\t_capsExp = /([A-Z])/g,\n\t_setState = state => {\n\t\tif (state) {\n\t\t\tlet style = state.t.style,\n\t\t\t\tl = state.length,\n\t\t\t\ti = 0,\n\t\t\t\tp, value;\n\t\t\tfor (; i < l; i +=2) {\n\t\t\t\tvalue = state[i+1];\n\t\t\t\tp = state[i];\n\t\t\t\tif (value) {\n\t\t\t\t\tstyle[p] = value;\n\t\t\t\t} else if (style[p]) {\n\t\t\t\t\tstyle.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getState = element => { // returns an array with alternating values like [property, value, property, value] and a \"t\" property pointing to the target (element). Makes it fast and cheap.\n\t\tlet l = _stateProps.length,\n\t\t\tstyle = element.style,\n\t\t\tstate = [],\n\t\t\ti = 0;\n\t\tfor (; i < l; i++) {\n\t\t\tstate.push(_stateProps[i], style[_stateProps[i]]);\n\t\t}\n\t\tstate.t = element;\n\t\treturn state;\n\t},\n\t_copyState = (state, override, omitOffsets) => {\n\t\tlet result = [],\n\t\t\tl = state.length,\n\t\t\ti = omitOffsets ? 8 : 0, // skip top, left, right, bottom if omitOffsets is true\n\t\t\tp;\n\t\tfor (; i < l; i += 2) {\n\t\t\tp = state[i];\n\t\t\tresult.push(p, (p in override) ? override[p] : state[i+1]);\n\t\t}\n\t\tresult.t = state.t;\n\t\treturn result;\n\t},\n\t_winOffsets = {left:0, top:0},\n\t_parsePosition = (value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax) => {\n\t\t_isFunction(value) && (value = value(self));\n\t\tif (_isString(value) && value.substr(0,3) === \"max\") {\n\t\t\tvalue = scrollerMax + (value.charAt(4) === \"=\" ? _offsetToPx(\"0\" + value.substr(3), scrollerSize) : 0);\n\t\t}\n\t\tif (!_isNumber(value)) {\n\t\t\t_isFunction(trigger) && (trigger = trigger(self));\n\t\t\tlet element = _toArray(trigger)[0] || _body,\n\t\t\t\tbounds = _getBounds(element) || {},\n\t\t\t\toffsets = value.split(\" \"),\n\t\t\t\tlocalOffset, globalOffset, display;\n\t\t\tif ((!bounds || (!bounds.left && !bounds.top)) && _getComputedStyle(element).display === \"none\") { // if display is \"none\", it won't report getBoundingClientRect() properly\n\t\t\t\tdisplay = element.style.display;\n\t\t\t\telement.style.display = \"block\";\n\t\t\t\tbounds = _getBounds(element);\n\t\t\t\tdisplay ? (element.style.display = display) : element.style.removeProperty(\"display\");\n\t\t\t}\n\t\t\tlocalOffset = _offsetToPx(offsets[0], bounds[direction.d]);\n\t\t\tglobalOffset = _offsetToPx(offsets[1] || \"0\", scrollerSize);\n\t\t\tvalue = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;\n\t\t\tmarkerScroller && _positionMarker(markerScroller, globalOffset, direction, (scrollerSize - globalOffset < 20 || (markerScroller._isStart && globalOffset > 20)));\n\t\t\tscrollerSize -= scrollerSize - globalOffset; // adjust for the marker\n\t\t} else if (markerScroller) {\n\t\t\t_positionMarker(markerScroller, scrollerSize, direction, true);\n\t\t}\n\t\tif (marker) {\n\t\t\tlet position = value + scrollerSize,\n\t\t\t\tisStart = marker._isStart;\n\t\t\tscrollerMax = \"scroll\" + direction.d2;\n\t\t\t_positionMarker(marker, position, direction, (isStart && position > 20) || (!isStart && (useFixedPosition ? Math.max(_body[scrollerMax], _docEl[scrollerMax]) : marker.parentNode[scrollerMax]) <= position + 1));\n\t\t\tif (useFixedPosition) {\n\t\t\t\tscrollerBounds = _getBounds(markerScroller);\n\t\t\t\tuseFixedPosition && (marker.style[direction.op.p] = (scrollerBounds[direction.op.p] - direction.op.m - marker._offset) + _px);\n\t\t\t}\n\t\t}\n\t\treturn Math.round(value);\n\t},\n\t_prefixExp = /(?:webkit|moz|length|cssText)/i,\n\t_reparent = (element, parent, top, left) => {\n\t\tif (element.parentNode !== parent) {\n\t\t\tlet style = element.style,\n\t\t\t\tp, cs;\n\t\t\tif (parent === _body) {\n\t\t\t\telement._stOrig = style.cssText; // record original inline styles so we can revert them later\n\t\t\t\tcs = _getComputedStyle(element);\n\t\t\t\tfor (p in cs) { // must copy all relevant styles to ensure that nothing changes visually when we reparent to the <body>. Skip the vendor prefixed ones.\n\t\t\t\t\tif (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === \"string\" && p !== \"0\") {\n\t\t\t\t\t\tstyle[p] = cs[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.top = top;\n\t\t\t\tstyle.left = left;\n\t\t\t} else {\n\t\t\t\tstyle.cssText = element._stOrig;\n\t\t\t}\n\t\t\tgsap.core.getCache(element).uncache = 1;\n\t\t\tparent.appendChild(element);\n\t\t}\n\t},\n\t// returns a function that can be used to tween the scroll position in the direction provided, and when doing so it'll add a .tween property to the FUNCTION itself, and remove it when the tween completes or gets killed. This gives us a way to have multiple ScrollTriggers use a central function for any given scroller and see if there's a scroll tween running (which would affect if/how things get updated)\n\t_getTweenCreator = (scroller, direction) => {\n\t\tlet getScroll = _getScrollFunc(scroller, direction),\n\t\t\tprop = \"_scroll\" + direction.p2, // add a tweenable property to the scroller that's a getter/setter function, like _scrollTop or _scrollLeft. This way, if someone does gsap.killTweensOf(scroller) it'll kill the scroll tween.\n\t\t\tlastScroll1, lastScroll2,\n\t\t\tgetTween = (scrollTo, vars, initialValue, change1, change2) => {\n\t\t\t\tlet tween = getTween.tween,\n\t\t\t\t\tonComplete = vars.onComplete,\n\t\t\t\t\tmodifiers = {};\n\t\t\t\ttween && tween.kill();\n\t\t\t\tlastScroll1 = Math.round(initialValue);\n\t\t\t\tvars[prop] = scrollTo;\n\t\t\t\tvars.modifiers = modifiers;\n\t\t\t\tmodifiers[prop] = value => {\n\t\t\t\t\tvalue = Math.round(getScroll()); // round because in some [very uncommon] Windows environments, it can get reported with decimals even though it was set without.\n\t\t\t\t\tif (value !== lastScroll1 && value !== lastScroll2) { // if the user scrolls, kill the tween. iOS Safari intermittently misreports the scroll position, it may be the most recently-set one or the one before that!\n\t\t\t\t\t\ttween.kill();\n\t\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;\n\t\t\t\t\t}\n\t\t\t\t\tlastScroll2 = lastScroll1;\n\t\t\t\t\treturn (lastScroll1 = Math.round(value));\n\t\t\t\t};\n\t\t\t\tvars.onComplete = () => {\n\t\t\t\t\tgetTween.tween = 0;\n\t\t\t\t\tonComplete && onComplete.call(tween);\n\t\t\t\t};\n\t\t\t\ttween = getTween.tween = gsap.to(scroller, vars);\n\t\t\t\treturn tween;\n\t\t\t};\n\t\tscroller[prop] = getScroll;\n\t\treturn getTween;\n\t};\n\n_horizontal.op = _vertical;\n\n\n\nexport class ScrollTrigger {\n\n\tconstructor(vars, animation) {\n\t\t_coreInitted || ScrollTrigger.register(gsap) || console.warn(\"Please gsap.registerPlugin(ScrollTrigger)\");\n\t\tthis.init(vars, animation);\n\t}\n\n\tinit(vars, animation) {\n\t\tthis.progress = 0;\n\t\tthis.vars && this.kill(1); // in case it's being initted again\n\t\tif (!_enabled) {\n\t\t\tthis.update = this.refresh = this.kill = _passThrough;\n\t\t\treturn;\n\t\t}\n\t\tvars = _setDefaults((_isString(vars) || _isNumber(vars) || vars.nodeType) ? {trigger: vars} : vars, _defaults);\n\t\tlet direction = vars.horizontal ? _horizontal : _vertical,\n\t\t\t{onUpdate, toggleClass, id, onToggle, onRefresh, scrub, trigger, pin, pinSpacing, invalidateOnRefresh, anticipatePin, onScrubComplete, onSnapComplete, once, snap, pinReparent} = vars,\n\t\t\tisToggle = !scrub && scrub !== 0,\n\t\t\tscroller = _toArray(vars.scroller || _win)[0],\n\t\t\tscrollerCache = gsap.core.getCache(scroller),\n\t\t\tisViewport = _isViewport(scroller),\n\t\t\tuseFixedPosition = \"pinType\" in vars ? vars.pinType === \"fixed\" : isViewport || _getProxyProp(scroller, \"pinType\") === \"fixed\",\n\t\t\tcallbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],\n\t\t\ttoggleActions = isToggle && vars.toggleActions.split(\" \"),\n\t\t\tmarkers = \"markers\" in vars ? vars.markers : _defaults.markers,\n\t\t\tborderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)[\"border\" + direction.p2 + _Width]) || 0,\n\t\t\tself = this,\n\t\t\tonRefreshInit = vars.onRefreshInit && (() => vars.onRefreshInit(self)),\n\t\t\tgetScrollerSize = _getSizeFunc(scroller, isViewport, direction),\n\t\t\tgetScrollerOffsets = _getOffsetsFunc(scroller, isViewport),\n\t\t\ttweenTo, pinCache, snapFunc, isReverted, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars,\n\t\t\tchange, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter,\n\t\t\tmarkerEndSetter, cs, snap1, snap2, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevProgress, prevScroll, prevAnimProgress;\n\n\t\tself.media = _creatingMedia;\n\t\tanticipatePin *= 45;\n\t\t_triggers.push(self);\n\t\tself.scroller = scroller;\n\t\tself.scroll = _getScrollFunc(scroller, direction);\n\t\tscroll1 = self.scroll();\n\t\tself.vars = vars;\n\t\tanimation = animation || vars.animation;\n\t\t(\"refreshPriority\" in vars) && (_sort = 1);\n\t\tscrollerCache.tweenScroll = scrollerCache.tweenScroll || {\n\t\t\ttop: _getTweenCreator(scroller, _vertical),\n\t\t\tleft: _getTweenCreator(scroller, _horizontal)\n\t\t};\n\t\tself.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];\n\t\tif (animation) {\n\t\t\tanimation.vars.lazy = false;\n\t\t\tanimation._initted || (animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.render(0, true, true));\n\t\t\tself.animation = animation.pause();\n\t\t\tanimation.scrollTrigger = self;\n\t\t\tscrubSmooth = _isNumber(scrub) && scrub;\n\t\t\tscrubSmooth && (scrubTween = gsap.to(animation, {ease: \"power3\", duration: scrubSmooth, onComplete: () => onScrubComplete && onScrubComplete(self)}));\n\t\t\tsnap1 = 0;\n\t\t\tid || (id = animation.vars.id);\n\t\t}\n\t\tif (snap) {\n\t\t\t_isObject(snap) || (snap = {snapTo: snap});\n\t\t\tgsap.set(isViewport ? [_body, _docEl] : scroller, {scrollBehavior: \"auto\"}); // smooth scrolling doesn't work with snap.\n\t\t\tsnapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === \"labels\" ? _getLabels(animation) : gsap.utils.snap(snap.snapTo);\n\t\t\tsnapDurClamp = snap.duration || {min: 0.1, max: 2};\n\t\t\tsnapDurClamp = _isObject(snapDurClamp) ? _clamp(snapDurClamp.min, snapDurClamp.max) : _clamp(snapDurClamp, snapDurClamp);\n\t\t\tsnapDelayedCall = gsap.delayedCall(snap.delay || (scrubSmooth / 2) || 0.1, () => {\n\t\t\t\tif (Math.abs(self.getVelocity()) < 10 && !_pointerIsDown) {\n\t\t\t\t\tlet totalProgress = animation && !isToggle ? animation.totalProgress() : self.progress,\n\t\t\t\t\t\tvelocity = ((totalProgress - snap2) / (_getTime() - _time2) * 1000) || 0,\n\t\t\t\t\t\tchange1 = _abs(velocity / 2) * velocity / 0.185,\n\t\t\t\t\t\tnaturalEnd = totalProgress + change1,\n\t\t\t\t\t\tendValue = _clamp(0, 1, snapFunc(naturalEnd, self)),\n\t\t\t\t\t\tscroll = self.scroll(),\n\t\t\t\t\t\tendScroll = Math.round(start + endValue * change),\n\t\t\t\t\t\ttween = tweenTo.tween;\n\t\t\t\t\tif (scroll <= end && scroll >= start && endScroll !== scroll) {\n\t\t\t\t\t\tif (tween && !tween._initted && tween.data <= Math.abs(endScroll - scroll)) { // there's an overlapping snap! So we must figure out which one is closer and let that tween live.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweenTo(endScroll, {\n\t\t\t\t\t\t\tduration: snapDurClamp(_abs( (Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05) || 0)),\n\t\t\t\t\t\t\tease: snap.ease || \"power3\",\n\t\t\t\t\t\t\tdata: Math.abs(endScroll - scroll), // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.\n\t\t\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\t\t\tsnap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;\n\t\t\t\t\t\t\t\tonSnapComplete && onSnapComplete(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, scroll, change1 * change, endScroll - scroll - change1 * change);\n\t\t\t\t\t}\n\t\t\t\t} else if (self.isActive) {\n\t\t\t\t\tsnapDelayedCall.restart(true);\n\t\t\t\t}\n\t\t\t}).pause();\n\t\t}\n\t\tid && (_ids[id] = self);\n\t\ttrigger = self.trigger = _toArray(trigger || pin)[0];\n\t\tpin = pin === true ? trigger : _toArray(pin)[0];\n\t\t_isString(toggleClass) && (toggleClass = {targets: trigger, className: toggleClass});\n\t\tif (pin) {\n\t\t\t(pinSpacing === false || pinSpacing === _margin) || (pinSpacing = !pinSpacing && _getComputedStyle(pin.parentNode).display === \"flex\" ? false : _padding); // if the parent is display: flex, don't apply pinSpacing by default.\n\t\t\tself.pin = pin;\n\t\t\tvars.force3D !== false && gsap.set(pin, {force3D: true});\n\t\t\tpinCache = gsap.core.getCache(pin);\n\t\t\tif (!pinCache.spacer) { // record the spacer and pinOriginalState on the cache in case someone tries pinning the same element with MULTIPLE ScrollTriggers - we don't want to have multiple spacers or record the \"original\" pin state after it has already been affected by another ScrollTrigger.\n\t\t\t\tpinCache.spacer = spacer = _doc.createElement(\"div\");\n\t\t\t\tspacer.setAttribute(\"class\", \"pin-spacer\" + (id ? \" pin-spacer-\" + id : \"\"));\n\t\t\t\tpinCache.pinState = pinOriginalState = _getState(pin);\n\t\t\t} else {\n\t\t\t\tpinOriginalState = pinCache.pinState;\n\t\t\t}\n\t\t\tself.spacer = spacer = pinCache.spacer;\n\t\t\tcs = _getComputedStyle(pin);\n\t\t\tspacingStart = cs[pinSpacing + direction.os2];\n\t\t\tpinGetter = gsap.getProperty(pin);\n\t\t\tpinSetter = gsap.quickSetter(pin, direction.a, _px);\n\t\t\t// pin.firstChild && !_maxScroll(pin, direction) && (pin.style.overflow = \"hidden\"); // protects from collapsing margins, but can have unintended consequences as demonstrated here: https://codepen.io/GreenSock/pen/1e42c7a73bfa409d2cf1e184e7a4248d so it was removed in favor of just telling people to set up their CSS to avoid the collapsing margins (overflow: hidden | auto is just one option. Another is border-top: 1px solid transparent).\n\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\tpinState = _getState(pin);\n\t\t}\n\t\tif (markers) {\n\t\t\tmarkerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;\n\t\t\tmarkerStartTrigger = _createMarker(\"scroller-start\", id, scroller, direction, markerVars, 0);\n\t\t\tmarkerEndTrigger = _createMarker(\"scroller-end\", id, scroller, direction, markerVars, 0, markerStartTrigger);\n\t\t\toffset = markerStartTrigger[\"offset\" + direction.op.d2];\n\t\t\tmarkerStart = _createMarker(\"start\", id, scroller, direction, markerVars, offset);\n\t\t\tmarkerEnd =_createMarker(\"end\", id, scroller, direction, markerVars, offset);\n\t\t\tif (!useFixedPosition) {\n\t\t\t\t_makePositionable(isViewport ? _body : scroller);\n\t\t\t\tgsap.set([markerStartTrigger, markerEndTrigger], {force3D: true});\n\t\t\t\tmarkerStartSetter = gsap.quickSetter(markerStartTrigger, direction.a, _px);\n\t\t\t\tmarkerEndSetter = gsap.quickSetter(markerEndTrigger, direction.a, _px);\n\t\t\t}\n\t\t}\n\n\t\tself.revert = revert => {\n\t\t\tlet r = revert !== false || !self.enabled,\n\t\t\t\tprevRefreshing = _refreshing;\n\t\t\tif (r !== isReverted) {\n\t\t\t\tif (r) {\n\t\t\t\t\tprevScroll = Math.max(self.scroll(), self.scroll.rec || 0); // record the scroll so we can revert later (repositioning/pinning things can affect scroll position). In the static refresh() method, we first record all the scroll positions as a reference.\n\t\t\t\t\tprevProgress = self.progress;\n\t\t\t\t\tprevAnimProgress = animation && animation.progress();\n\t\t\t\t}\n\t\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.style.display = r ? \"none\" : \"block\");\n\t\t\t\tr && (_refreshing = 1);\n\t\t\t\tself.update(r); // make sure the pin is back in its original position so that all the measurements are correct.\n\t\t\t\t_refreshing = prevRefreshing;\n\t\t\t\tpin && (r ? _swapPinOut(pin, spacer, pinOriginalState) : (!pinReparent || !self.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState));\n\t\t\t\tisReverted = r;\n\t\t\t}\n\t\t}\n\n\n\t\tself.refresh = soft => {\n\t\t\tif (_refreshing || !self.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (pin && soft && _lastScrollTime) {\n\t\t\t\t_addListener(ScrollTrigger, \"scrollEnd\", _softRefresh);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_refreshing = 1;\n\t\t\tscrubTween && scrubTween.kill();\n\t\t\tinvalidateOnRefresh && animation && animation.progress(0).invalidate();\n\t\t\tisReverted || self.revert();\n\t\t\tlet size = getScrollerSize(),\n\t\t\t\tscrollerBounds = getScrollerOffsets(),\n\t\t\t\tmax = _maxScroll(scroller, direction),\n\t\t\t\toffset = 0,\n\t\t\t\totherPinOffset = 0,\n\t\t\t\tparsedEnd = vars.end,\n\t\t\t\tparsedEndTrigger = vars.endTrigger || trigger,\n\t\t\t\tparsedStart = vars.start || (vars.start === 0 ? 0 : (pin || !trigger ? \"0 0\" : \"0 100%\")),\n\t\t\t\ttriggerIndex = (trigger && Math.max(0, _triggers.indexOf(self))) || 0,\n\t\t\t\ti = triggerIndex,\n\t\t\t\tcs, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll;\n\t\t\twhile (i--) { // user might try to pin the same element more than once, so we must find any prior triggers with the same pin, revert them, and determine how long they're pinning so that we can offset things appropriately. Make sure we revert from last to first so that things \"rewind\" properly.\n\t\t\t\tcurPin = _triggers[i].pin;\n\t\t\t\tcurPin && (curPin === trigger || curPin === pin) && _triggers[i].revert();\n\t\t\t}\n\t\t\tstart = _parsePosition(parsedStart, trigger, size, direction, self.scroll(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max) || (pin ? -0.001 : 0);\n\t\t\t_isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));\n\t\t\tif (_isString(parsedEnd) && !parsedEnd.indexOf(\"+=\")) {\n\t\t\t\tif (~parsedEnd.indexOf(\" \")) {\n\t\t\t\t\tparsedEnd = (_isString(parsedStart) ? parsedStart.split(\" \")[0] : \"\") + parsedEnd;\n\t\t\t\t} else {\n\t\t\t\t\toffset = _offsetToPx(parsedEnd.substr(2), size);\n\t\t\t\t\tparsedEnd = _isString(parsedStart) ? parsedStart : start + offset; // _parsePosition won't factor in the offset if the start is a number, so do it here.\n\t\t\t\t\tparsedEndTrigger = trigger;\n\t\t\t\t}\n\t\t\t}\n\t\t\tend = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? \"100% 0\" : max), parsedEndTrigger, size, direction, self.scroll() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max)) || -0.001;\n\t\t\tchange = (end - start) || ((start -= 0.01) && 0.001);\n\n\t\t\toffset = 0;\n\t\t\ti = triggerIndex;\n\t\t\twhile (i--) {\n\t\t\t\tcurTrigger = _triggers[i];\n\t\t\t\tcurPin = curTrigger.pin;\n\t\t\t\tif (curPin && curTrigger.start - curTrigger._pinPush < start) {\n\t\t\t\t\tcs = curTrigger.end - curTrigger.start;\n\t\t\t\t\tcurPin === trigger && (offset += cs);\n\t\t\t\t\tcurPin === pin && (otherPinOffset += cs);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += offset;\n\t\t\tend += offset;\n\t\t\tself._pinPush = otherPinOffset;\n\t\t\tif (markerStart && offset) { // offset the markers if necessary\n\t\t\t\tcs = {};\n\t\t\t\tcs[direction.a] = \"+=\" + offset;\n\t\t\t\tgsap.set([markerStart, markerEnd], cs);\n\t\t\t}\n\n\t\t\tif (pin) {\n\t\t\t\tcs = _getComputedStyle(pin);\n\t\t\t\tisVertical = direction === _vertical;\n\t\t\t\tscroll = self.scroll(); // recalculate because the triggers can affect the scroll\n\t\t\t\tpinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;\n\t\t\t\t!max && end > 1 && ((isViewport ? _body : scroller).style[\"overflow-\" + direction.a] = \"scroll\"); // makes sure the scroller has a scrollbar, otherwise if something has width: 100%, for example, it would be too big (exclude the scrollbar). See https://greensock.com/forums/topic/25182-scrolltrigger-width-of-page-increase-where-markers-are-set-to-false/\n\t\t\t\t_swapPinIn(pin, spacer, cs);\n\t\t\t\tpinState = _getState(pin);\n\t\t\t\t// transforms will interfere with the top/left/right/bottom placement, so remove them temporarily. getBoundingClientRect() factors in transforms.\n\t\t\t\tbounds = _getBounds(pin, true);\n\t\t\t\toppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();\n\t\t\t\tif (pinSpacing) {\n\t\t\t\t\tspacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];\n\t\t\t\t\tspacerState.t = spacer;\n\t\t\t\t\ti = (pinSpacing === _padding) ? _getSize(pin, direction) + change + otherPinOffset : 0;\n\t\t\t\t\ti && spacerState.push(direction.d, i + _px); // for box-sizing: border-box (must include padding).\n\t\t\t\t\t_setState(spacerState);\n\t\t\t\t\tuseFixedPosition && self.scroll(prevScroll);\n\t\t\t\t}\n\t\t\t\tif (useFixedPosition) {\n\t\t\t\t\toverride = {\n\t\t\t\t\t\ttop: (bounds.top + (isVertical ? scroll - start : oppositeScroll)) + _px,\n\t\t\t\t\t\tleft: (bounds.left + (isVertical ? oppositeScroll : scroll - start)) + _px,\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tposition: \"fixed\"\n\t\t\t\t\t};\n\t\t\t\t\toverride[_width] = override[\"max\" + _Width] = Math.ceil(bounds.width) + _px;\n\t\t\t\t\toverride[_height] = override[\"max\" + _Height] = Math.ceil(bounds.height) + _px;\n\t\t\t\t\toverride[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = \"0\";\n\t\t\t\t\toverride[_padding] = cs[_padding];\n\t\t\t\t\toverride[_padding + _Top] = cs[_padding + _Top];\n\t\t\t\t\toverride[_padding + _Right] = cs[_padding + _Right];\n\t\t\t\t\toverride[_padding + _Bottom] = cs[_padding + _Bottom];\n\t\t\t\t\toverride[_padding + _Left] = cs[_padding + _Left];\n\t\t\t\t\tpinActiveState = _copyState(pinOriginalState, override, pinReparent);\n\t\t\t\t}\n\t\t\t\tif (animation) { // the animation might be affecting the transform, so we must jump to the end, check the value, and compensate accordingly. Otherwise, when it becomes unpinned, the pinSetter() will get set to a value that doesn't include whatever the animation did.\n\t\t\t\t\tanimation.progress(1, true);\n\t\t\t\t\tpinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;\n\t\t\t\t\tchange !== pinChange && pinActiveState.splice(pinActiveState.length - 2, 2); // transform is the last property/value set in the state Array. Since the animation is controlling that, we should omit it.\n\t\t\t\t\tanimation.progress(0, true);\n\t\t\t\t} else {\n\t\t\t\t\tpinChange = change\n\t\t\t\t}\n\t\t\t} else if (trigger && self.scroll()) { // it may be INSIDE a pinned element, so walk up the tree and look for any elements with _pinOffset to compensate because anything with pinSpacing that's already scrolled would throw off the measurements in getBoundingClientRect()\n\t\t\t\tbounds = trigger.parentNode;\n\t\t\t\twhile (bounds && bounds !== _body) {\n\t\t\t\t\tif (bounds._pinOffset) {\n\t\t\t\t\t\tstart -= bounds._pinOffset;\n\t\t\t\t\t\tend -= bounds._pinOffset;\n\t\t\t\t\t}\n\t\t\t\t\tbounds = bounds.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; i < triggerIndex; i++) { // make sure we revert from first to last to make sure things reach their end state properly\n\t\t\t\tcurTrigger = _triggers[i].pin;\n\t\t\t\tcurTrigger && (curTrigger === trigger || curTrigger === pin) && _triggers[i].revert(false);\n\t\t\t}\n\t\t\tself.start = start;\n\t\t\tself.end = end;\n\t\t\tscroll1 = scroll2 = self.scroll(); // reset velocity\n\t\t\tscroll1 < prevScroll && self.scroll(prevScroll);\n\t\t\tself.revert(false);\n\t\t\t_refreshing = 0;\n\t\t\tprevAnimProgress && isToggle && animation.progress(prevAnimProgress, true);\n\t\t\tif (prevProgress !== self.progress) { // ensures that the direction is set properly (when refreshing, progress is set back to 0 initially, then back again to wherever it needs to be) and that callbacks are triggered.\n\t\t\t\tscrubTween && animation.totalProgress(prevProgress, true); // to avoid issues where animation callbacks like onStart aren't triggered.\n\t\t\t\tself.progress = prevProgress;\n\t\t\t\tself.update();\n\t\t\t}\n\t\t\tpin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange));\n\t\t\tonRefresh && onRefresh(self);\n\t\t};\n\n\t\tself.getVelocity = () => ((self.scroll() - scroll2) / (_getTime() - _time2) * 1000) || 0;\n\n\t\tself.update = (reset, recordVelocity) => {\n\t\t\tlet scroll = self.scroll(),\n\t\t\t\tp = reset ? 0 : (scroll - start) / change,\n\t\t\t\tclipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,\n\t\t\t\tprevProgress = self.progress,\n\t\t\t\tisActive, wasActive, toggleState, action, stateChanged, toggled;\n\t\t\tif (recordVelocity) {\n\t\t\t\tscroll2 = scroll1;\n\t\t\t\tscroll1 = scroll;\n\t\t\t\tif (snap) {\n\t\t\t\t\tsnap2 = snap1;\n\t\t\t\t\tsnap1 = animation && !isToggle ? animation.totalProgress() : clipped;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// anticipate the pinning a few ticks ahead of time based on velocity to avoid a visual glitch due to the fact that most browsers do scrolling on a separate thread (not synced with requestAnimationFrame).\n\t\t\t(anticipatePin && !clipped && pin && !_refreshing && !_startup && _lastScrollTime && start < scroll + ((scroll - scroll2) / (_getTime() - _time2)) * anticipatePin) && (clipped = 0.0001);\n\t\t\tif (clipped !== prevProgress && self.enabled) {\n\t\t\t\tisActive = self.isActive = !!clipped && clipped < 1;\n\t\t\t\twasActive = !!prevProgress && prevProgress < 1;\n\t\t\t\ttoggled = isActive !== wasActive;\n\t\t\t\tstateChanged = toggled || !!clipped !== !!prevProgress; // could go from start all the way to end, thus it didn't toggle but it did change state in a sense (may need to fire a callback)\n\t\t\t\tself.direction = clipped > prevProgress ? 1 : -1;\n\t\t\t\tself.progress = clipped;\n\t\t\t\tif (!isToggle) {\n\t\t\t\t\tif (scrubTween && !_refreshing && !_startup) {\n\t\t\t\t\t\tscrubTween.vars.totalProgress = clipped;\n\t\t\t\t\t\tscrubTween.invalidate().restart();\n\t\t\t\t\t} else if (animation) {\n\t\t\t\t\t\tanimation.totalProgress(clipped, !!_refreshing);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pin) {\n\t\t\t\t\treset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);\n\t\t\t\t\tif (!useFixedPosition) {\n\t\t\t\t\t\tpinSetter(pinStart + pinChange * clipped);\n\t\t\t\t\t} else if (stateChanged) {\n\t\t\t\t\t\taction = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction); // if it's at the VERY end of the page, don't switch away from position: fixed because it's pointless and it could cause a brief flash when the user scrolls back up (when it gets pinned again)\n\t\t\t\t\t\tif (pinReparent) {\n\t\t\t\t\t\t\tif (!reset && (isActive || action)) {\n\t\t\t\t\t\t\t\tlet bounds = _getBounds(pin, true),\n\t\t\t\t\t\t\t\t\toffset = scroll - start;\n\t\t\t\t\t\t\t\t_reparent(pin, _body, (bounds.top + (direction === _vertical ? offset : 0)) + _px, (bounds.left + (direction === _vertical ? 0 : offset)) + _px);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_reparent(pin, spacer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_setState(isActive || action ? pinActiveState : pinState);\n\t\t\t\t\t\t(pinChange !== change && clipped < 1 && isActive) || pinSetter(pinStart + (clipped === 1 && !action ? pinChange : 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsnap && !tweenTo.tween && !_refreshing && !_startup && snapDelayedCall.restart(true);\n\t\t\t\ttoggleClass && (toggled || (once && clipped && (clipped < 1 || !_limitCallbacks))) && _toArray(toggleClass.targets).forEach(el => el.classList[isActive || once ? \"add\" : \"remove\"](toggleClass.className)); // classes could affect positioning, so do it even if reset or refreshing is true.\n\t\t\t\tonUpdate && !isToggle && !reset && onUpdate(self);\n\t\t\t\tif (stateChanged && !_refreshing) {\n\t\t\t\t\ttoggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3; // 0 = enter, 1 = leave, 2 = enterBack, 3 = leaveBack (we prioritize the FIRST encounter, thus if you scroll really fast past the onEnter and onLeave in one tick, it'd prioritize onEnter.\n\t\t\t\t\tif (isToggle) {\n\t\t\t\t\t\taction = (!toggled && toggleActions[toggleState + 1] !== \"none\" && toggleActions[toggleState + 1]) || toggleActions[toggleState]; // if it didn't toggle, that means it shot right past and since we prioritize the \"enter\" action, we should switch to the \"leave\" in this case (but only if one is defined)\n\t\t\t\t\t\tif (animation && (action === \"complete\" || action === \"reset\" || action in animation)) {\n\t\t\t\t\t\t\tif (action === \"complete\") {\n\t\t\t\t\t\t\t\tanimation.pause().totalProgress(1);\n\t\t\t\t\t\t\t} else if (action === \"reset\") {\n\t\t\t\t\t\t\t\tanimation.restart(true).pause();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation[action]();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate && onUpdate(self);\n\t\t\t\t\t}\n\t\t\t\t\tif (toggled || !_limitCallbacks) { // on startup, the page could be scrolled and we don't want to fire callbacks that didn't toggle. For example onEnter shouldn't fire if the ScrollTrigger isn't actually entered.\n\t\t\t\t\t\tonToggle && toggled && onToggle(self);\n\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\tonce && (clipped === 1 ? self.kill(false, 1) : (callbacks[toggleState] = 0)); // a callback shouldn't be called again if once is true.\n\t\t\t\t\t\tif (!toggled) { // it's possible to go completely past, like from before the start to after the end (or vice-versa) in which case BOTH callbacks should be fired in that order\n\t\t\t\t\t\t\ttoggleState = clipped === 1 ? 1 : 3;\n\t\t\t\t\t\t\tcallbacks[toggleState] && callbacks[toggleState](self);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (isToggle && onUpdate && !_refreshing) {\n\t\t\t\t\tonUpdate(self);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update absolutely-positioned markers (only if the scroller isn't the viewport)\n\t\t\tif (markerEndSetter) {\n\t\t\t\tmarkerStartSetter(scroll + (markerStartTrigger._isFlipped ? 1 : 0));\n\t\t\t\tmarkerEndSetter(scroll);\n\t\t\t}\n\t\t};\n\n\t\tself.enable = () => {\n\t\t\tif (!self.enabled) {\n\t\t\t\tself.enabled = true;\n\t\t\t\t_addListener(scroller, \"resize\", _onResize);\n\t\t\t\t_addListener(scroller, \"scroll\", _onScroll);\n\t\t\t\tonRefreshInit && _addListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\t!animation || !animation.add ? self.refresh() : gsap.delayedCall(0.01, () => start || end || self.refresh()) && (change = 0.01) && (start = end = 0); // if the animation is a timeline, it may not have been populated yet, so it wouldn't render at the proper place on the first refresh(), thus we should schedule one for the next tick.\n\t\t\t}\n\t\t};\n\n\t\tself.disable = (reset, allowAnimation) => {\n\t\t\tif (self.enabled) {\n\t\t\t\treset !== false && self.revert();\n\t\t\t\tself.enabled = self.isActive = false;\n\t\t\t\tallowAnimation || (scrubTween && scrubTween.pause());\n\t\t\t\tprevScroll = 0;\n\t\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t\t\tonRefreshInit && _removeListener(ScrollTrigger, \"refreshInit\", onRefreshInit);\n\t\t\t\tif (snapDelayedCall) {\n\t\t\t\t\tsnapDelayedCall.pause();\n\t\t\t\t\ttweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);\n\t\t\t\t}\n\t\t\t\tif (!isViewport) {\n\t\t\t\t\tlet i = _triggers.length;\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (_triggers[i].scroller === scroller && _triggers[i] !== self) {\n\t\t\t\t\t\t\treturn; //don't remove the listeners if there are still other triggers referencing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_removeListener(scroller, \"resize\", _onResize);\n\t\t\t\t\t_removeListener(scroller, \"scroll\", _onScroll);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tself.kill = (revert, allowAnimation) => {\n\t\t\tself.disable(revert, allowAnimation);\n\t\t\tid && (delete _ids[id]);\n\t\t\tlet i = _triggers.indexOf(self);\n\t\t\t_triggers.splice(i, 1);\n\t\t\ti === _i && _direction > 0 && _i--; // if we're in the middle of a refresh() or update(), splicing would cause skips in the index, so adjust...\n\t\t\tif (animation) {\n\t\t\t\tanimation.scrollTrigger = null;\n\t\t\t\trevert && animation.render(-1);\n\t\t\t\tallowAnimation || animation.kill();\n\t\t\t}\n\t\t\tmarkerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(m => m.parentNode.removeChild(m));\n\t\t\tpinCache && (pinCache.uncache = 1);\n\t\t};\n\n\t\tself.enable();\n\t}\n\n\n\tstatic register(core) {\n\t\tif (!_coreInitted) {\n\t\t\tgsap = core || _getGSAP();\n\t\t\tif (_windowExists() && window.document) {\n\t\t\t\t_win = window;\n\t\t\t\t_doc = document;\n\t\t\t\t_docEl = _doc.documentElement;\n\t\t\t\t_body = _doc.body;\n\t\t\t}\n\t\t\tif (gsap) {\n\t\t\t\t_toArray = gsap.utils.toArray;\n\t\t\t\t_clamp = gsap.utils.clamp;\n\t\t\t\tgsap.core.globals(\"ScrollTrigger\", ScrollTrigger); // must register the global manually because in Internet Explorer, functions (classes) don't have a \"name\" property.\n\t\t\t\tif (_body) {\n\t\t\t\t\t_raf = _win.requestAnimationFrame || (f => setTimeout(f, 16));\n\t\t\t\t\t_addListener(_win, \"mousewheel\", _onScroll);\n\t\t\t\t\t_root = [_win, _doc, _docEl, _body];\n\t\t\t\t\t_addListener(_doc, \"scroll\", _onScroll); // some browsers (like Chrome), the window stops dispatching scroll events on the window if you scroll really fast, but it's consistent on the document!\n\t\t\t\t\tlet bodyStyle = _body.style,\n\t\t\t\t\t\tborder = bodyStyle.borderTop,\n\t\t\t\t\t\tbounds;\n\t\t\t\t\tbodyStyle.borderTop = \"1px solid #000\"; // works around an issue where a margin of a child element could throw off the bounds of the _body, making it seem like there's a margin when there actually isn't. The border ensures that the bounds are accurate.\n\t\t\t\t\tbounds = _getBounds(_body);\n\t\t\t\t\t_vertical.m = Math.round(bounds.top + _vertical.sc()) || 0; // accommodate the offset of the <body> caused by margins and/or padding\n\t\t\t\t\t_horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;\n\t\t\t\t\tborder ? (bodyStyle.borderTop = border) : bodyStyle.removeProperty(\"border-top\");\n\t\t\t\t\t_syncInterval = setInterval(_sync, 200);\n\t\t\t\t\tgsap.delayedCall(0.5, () => _startup = 0);\n\t\t\t\t\t_addListener(_doc, \"touchcancel\", _passThrough); // some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document.\n\t\t\t\t\t_addListener(_body, \"touchstart\", _passThrough); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t\t\t\t_multiListener(_addListener, _doc, \"pointerdown,touchstart,mousedown\", () => _pointerIsDown = 1);\n\t\t\t\t\t_multiListener(_addListener, _doc, \"pointerup,touchend,mouseup\", () => _pointerIsDown = 0);\n\t\t\t\t\t_transformProp = gsap.utils.checkPrefix(\"transform\");\n\t\t\t\t\t_stateProps.push(_transformProp);\n\t\t\t\t\t_coreInitted = _getTime();\n\t\t\t\t\t_resizeDelay = gsap.delayedCall(0.2, _refreshAll).pause();\n\t\t\t\t\t_autoRefresh = [_doc, \"visibilitychange\", () => {\n\t\t\t\t\t\tlet w = _win.innerWidth,\n\t\t\t\t\t\t\th = _win.innerHeight;\n\t\t\t\t\t\tif (_doc.hidden) {\n\t\t\t\t\t\t\t_prevWidth = w;\n\t\t\t\t\t\t\t_prevHeight = h;\n\t\t\t\t\t\t} else if (_prevWidth !== w || _prevHeight !== h) {\n\t\t\t\t\t\t\t_onResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, _doc, \"DOMContentLoaded\", _refreshAll, _win, \"load\", () => _lastScrollTime || _refreshAll(), _win, \"resize\", _onResize];\n\t\t\t\t\t_iterateAutoRefresh(_addListener);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _coreInitted;\n\t}\n\n\tstatic defaults(config) {\n\t\tfor (let p in config) {\n\t\t\t_defaults[p] = config[p];\n\t\t}\n\t}\n\n\tstatic kill() {\n\t\t_enabled = 0;\n\t\t_triggers.slice(0).forEach(trigger => trigger.kill(1));\n\t}\n\n\tstatic config(vars) {\n\t\t(\"limitCallbacks\" in vars) && (_limitCallbacks = !!vars.limitCallbacks);\n\t\tlet ms = vars.syncInterval;\n\t\tms && clearInterval(_syncInterval) || ((_syncInterval = ms) && setInterval(_sync, ms));\n\t\t(\"autoRefreshEvents\" in vars) && (_iterateAutoRefresh(_removeListener) || _iterateAutoRefresh(_addListener, vars.autoRefreshEvents || \"none\"));\n\t}\n\n\tstatic scrollerProxy(target, vars) {\n\t\tlet t = _toArray(target)[0];\n\t\t_isViewport(t) ? _proxies.unshift(_win, vars, _body, vars, _docEl, vars) : _proxies.unshift(t, vars);\n\t}\n\n\tstatic matchMedia(vars) { // _media is populated in the following order: mediaQueryString, onMatch, onUnmatch, isMatched. So if there are two media queries, the Array would have a length of 8\n\t\tlet mq, p, i, func, result;\n\t\tfor (p in vars) {\n\t\t\ti = _media.indexOf(p);\n\t\t\tfunc = vars[p];\n\t\t\t_creatingMedia = p;\n\t\t\tif (p === \"all\") {\n\t\t\t\tfunc();\n\t\t\t} else {\n\t\t\t\tmq = _win.matchMedia(p);\n\t\t\t\tif (mq) {\n\t\t\t\t\tmq.matches && (result = func());\n\t\t\t\t\tif (~i) {\n\t\t\t\t\t\t_media[i + 1] = _combineFunc(_media[i + 1], func);\n\t\t\t\t\t\t_media[i + 2] = _combineFunc(_media[i + 2], result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti = _media.length;\n\t\t\t\t\t\t_media.push(p, func, result);\n\t\t\t\t\t\tmq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener(\"change\", _onMediaChange);\n\t\t\t\t\t}\n\t\t\t\t\t_media[i + 3] = mq.matches;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_creatingMedia = 0;\n\t\t}\n\t\treturn _media;\n\t}\n\n\tstatic clearMatchMedia(query) {\n\t\tquery || (_media.length = 0);\n\t\tquery = _media.indexOf(query);\n\t\tquery >= 0 && _media.splice(query, 4);\n\t}\n\n}\n\nScrollTrigger.version = \"3.6.0\";\nScrollTrigger.saveStyles = targets => targets ? _toArray(targets).forEach(target => {\n\tlet i = _savedStyles.indexOf(target);\n\ti >= 0 && _savedStyles.splice(i, 4);\n\t_savedStyles.push(target, target.style.cssText, gsap.core.getCache(target), _creatingMedia);\n}) : _savedStyles;\nScrollTrigger.revert = (soft, media) => _revertAll(!soft, media);\nScrollTrigger.create = (vars, animation) => new ScrollTrigger(vars, animation);\nScrollTrigger.refresh = safe => safe ? _onResize() : _refreshAll(true);\nScrollTrigger.update = _updateAll;\nScrollTrigger.maxScroll = (element, horizontal) => _maxScroll(element, horizontal ? _horizontal : _vertical);\nScrollTrigger.getScrollFunc = (element, horizontal) => _getScrollFunc(_toArray(element)[0], horizontal ? _horizontal : _vertical);\nScrollTrigger.getById = id => _ids[id];\nScrollTrigger.getAll = () => _triggers.slice(0);\nScrollTrigger.isScrolling = () => !!_lastScrollTime;\nScrollTrigger.addEventListener = (type, callback) => {\n\tlet a = _listeners[type] || (_listeners[type] = []);\n\t~a.indexOf(callback) || a.push(callback);\n};\nScrollTrigger.removeEventListener = (type, callback) => {\n\tlet a = _listeners[type],\n\t\ti = a && a.indexOf(callback);\n\ti >= 0 && a.splice(i, 1);\n};\nScrollTrigger.batch = (targets, vars) => {\n\tlet result = [],\n\t\tvarsCopy = {},\n\t\tinterval = vars.interval || 0.016,\n\t\tbatchMax = vars.batchMax || 1e9,\n\t\tproxyCallback = (type, callback) => {\n\t\t\tlet elements = [],\n\t\t\t\ttriggers = [],\n\t\t\t\tdelay = gsap.delayedCall(interval, () => {callback(elements, triggers); elements = []; triggers = [];}).pause();\n\t\t\treturn self => {\n\t\t\t\telements.length || delay.restart(true);\n\t\t\t\telements.push(self.trigger);\n\t\t\t\ttriggers.push(self);\n\t\t\t\tbatchMax <= elements.length && delay.progress(1);\n\t\t\t};\n\t\t},\n\t\tp;\n\tfor (p in vars) {\n\t\tvarsCopy[p] = (p.substr(0, 2) === \"on\" && _isFunction(vars[p]) && p !== \"onRefreshInit\") ? proxyCallback(p, vars[p]) : vars[p];\n\t}\n\tif (_isFunction(batchMax)) {\n\t\tbatchMax = batchMax();\n\t\t_addListener(ScrollTrigger, \"refresh\", () => batchMax = vars.batchMax());\n\t}\n\t_toArray(targets).forEach(target => {\n\t\tlet config = {};\n\t\tfor (p in varsCopy) {\n\t\t\tconfig[p] = varsCopy[p];\n\t\t}\n\t\tconfig.trigger = target;\n\t\tresult.push(ScrollTrigger.create(config));\n\t});\n\treturn result;\n}\nScrollTrigger.sort = func => _triggers.sort(func || ((a, b) => (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6)));\n\n_getGSAP() && gsap.registerPlugin(ScrollTrigger);\n\nexport { ScrollTrigger as default };"],"names":["_passThrough","v","_windowExists","window","_getGSAP","gsap","registerPlugin","_isViewport","e","_root","indexOf","_getProxyProp","element","property","_proxies","_getScrollFunc","s","sc","i","_scrollers","offset","_vertical","push","value","arguments","length","_getBoundsFunc","_winOffsets","width","_win","innerWidth","height","innerHeight","_getBounds","_maxScroll","d2","d","a","Math","max","_docEl","_body","_iterateAutoRefresh","func","events","_autoRefresh","_isString","_isFunction","_isNumber","_isObject","_callIfFunc","_combineFunc","f1","f2","result1","result2","_getComputedStyle","getComputedStyle","_setDefaults","obj","defaults","p","_getSize","_multiListener","types","callback","split","forEach","type","_addListener","addEventListener","passive","_removeListener","removeEventListener","_offsetToPx","size","eqIndex","relative","charAt","parseFloat","substr","_keywords","_createMarker","name","container","direction","matchWidthEl","startColor","endColor","fontSize","indent","fontWeight","_doc","createElement","useFixedPosition","isScroller","parent","isStart","color","css","_right","_bottom","offsetWidth","_isStart","setAttribute","style","cssText","innerText","children","insertBefore","appendChild","_offset","op","_positionMarker","_sync","_request","_raf","_updateAll","_onScroll","_lastScrollTime","_dispatch","_getTime","_onResize","_refreshing","_resizeDelay","restart","_onMediaChange","index","tick","ticker","frame","matches","_lastMediaTick","_startup","_revertAll","_media","matchMedia","_revertRecorded","_creatingMedia","_coreInitted","_refreshAll","_softRefresh","ScrollTrigger","_swapPinIn","pin","spacer","cs","spacerState","parentNode","_propNamesToCopy","spacerStyle","pinStyle","position","display","overflow","boxSizing","_width","_horizontal","_px","_height","_padding","_margin","_left","_setState","_getState","l","_stateProps","state","t","_parsePosition","trigger","scrollerSize","scroll","marker","markerScroller","self","scrollerBounds","borderWidth","scrollerMax","localOffset","globalOffset","_toArray","bounds","offsets","left","top","removeProperty","m","round","_reparent","_stOrig","_prefixExp","test","core","getCache","uncache","_getTweenCreator","scroller","lastScroll1","lastScroll2","getScroll","prop","p2","getTween","scrollTo","vars","initialValue","change1","change2","tween","onComplete","modifiers","kill","ratio","call","to","_clamp","_time2","_syncInterval","_pointerIsDown","_transformProp","_i","_prevWidth","_prevHeight","_sort","_limitCallbacks","Date","now","_time1","_enabled","_abs","abs","_scrollLeft","_scrollTop","_Right","_Left","_Top","_Bottom","_Width","_Height","os","os2","pageXOffset","pageYOffset","withoutTransforms","x","y","xPercent","yPercent","rotation","rotationX","rotationY","scale","skewX","skewY","progress","getBoundingClientRect","_markerDefaults","_defaults","toggleActions","anticipatePin","center","bottom","right","start","flipped","side","oppositeSide","_isFlipped","set","_triggers","_ids","_listeners","_emptyArray","map","f","_savedStyles","media","rec","revert","force","skipRevert","refreshInits","sort","refresh","result","render","pause","_lastScroll","_direction","time","recordVelocity","update","concat","_capsExp","replace","toLowerCase","init","animation","this","tweenTo","pinCache","snapFunc","isReverted","scroll1","scroll2","end","markerStart","markerEnd","markerStartTrigger","markerEndTrigger","markerVars","change","pinOriginalState","pinActiveState","pinState","pinGetter","pinSetter","pinStart","pinChange","spacingStart","markerStartSetter","markerEndSetter","snap1","snap2","scrubTween","scrubSmooth","snapDurClamp","snapDelayedCall","prevProgress","prevScroll","prevAnimProgress","nodeType","horizontal","onUpdate","toggleClass","id","onToggle","onRefresh","scrub","pinSpacing","invalidateOnRefresh","onScrubComplete","onSnapComplete","once","snap","pinReparent","isToggle","scrollerCache","isViewport","pinType","callbacks","onEnter","onLeave","onEnterBack","onLeaveBack","markers","onRefreshInit","getScrollerSize","_getSizeFunc","getScrollerOffsets","_getOffsetsFunc","tweenScroll","lazy","_initted","immediateRender","scrollTrigger","ease","duration","snapTo","scrollBehavior","_getLabels","labels","utils","min","delayedCall","delay","getVelocity","totalProgress","velocity","naturalEnd","endValue","endScroll","data","isActive","targets","className","force3D","getProperty","quickSetter","_makePositionable","r","enabled","prevRefreshing","_swapPinOut","removeChild","soft","invalidate","isVertical","override","curTrigger","curPin","oppositeScroll","otherPinOffset","parsedEnd","parsedEndTrigger","endTrigger","parsedStart","triggerIndex","_pinPush","ceil","_copyState","omitOffsets","splice","_pinOffset","reset","toggleState","action","stateChanged","toggled","clipped","el","classList","enable","add","disable","allowAnimation","register","document","documentElement","body","toArray","clamp","globals","requestAnimationFrame","setTimeout","bodyStyle","border","borderTop","setInterval","checkPrefix","w","h","hidden","config","slice","limitCallbacks","ms","syncInterval","clearInterval","autoRefreshEvents","scrollerProxy","target","unshift","mq","addListener","clearMatchMedia","query","console","warn","version","saveStyles","create","safe","maxScroll","getScrollFunc","getById","getAll","isScrolling","batch","proxyCallback","elements","triggers","interval","batchMax","varsCopy","b","refreshPriority"],"mappings":"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"}